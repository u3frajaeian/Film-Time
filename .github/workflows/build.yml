name: CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

env:
  ORG_GRADLE_PROJECT_FILM_TIME_TMDB_API_KEY: ${{ secrets.FILM_TIME_TMDB_API_KEY }}
  ORG_GRADLE_PROJECT_FILM_TIME_TRAKT_CLIENT_ID: ${{ secrets.FILM_TIME_TRAKT_CLIENT_ID }}
  ORG_GRADLE_PROJECT_FILM_TIME_TRAKT_CLIENT_SECRET: ${{ secrets.FILM_TIME_TRAKT_CLIENT_SECRET }}
  ORG_GRADLE_PROJECT_FILM_TIME_RELEASE_KEYSTORE_PASSWORD: ${{ secrets.FILM_TIME_RELEASE_KEYSTORE_PASSWORD }}
  ORG_GRADLE_PROJECT_FILM_TIME_RELEASE_KEY_PASSWORD: ${{ secrets.FILM_TIME_RELEASE_KEY_PASSWORD }}

jobs:
  mobile:
    name: "Mobile: Check code style and build"
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Copy CI gradle.properties
      run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

    - name: set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'zulu'
        cache: gradle

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3

    - name: Check build-logic
      run: ./gradlew check -p ./gradle/build-logic

    - name: Decrypt secrets
      run: ./release/decrypt-secrets.sh
      env:
        ENCRYPT_KEY: ${{ secrets.FILM_TIME_CI_ENCRYPT_KEY }}

    - name: Check code style with Spotless
      run: ./gradlew spotlessCheck --no-configuration-cache

    - name: Build with Gradle
      run: ./gradlew :app:assembleGithubDebug

    - name: Clean secrets
      if: always()
      run: ./release/clean-secrets.sh

  tv:
    name: "TV: Check code style and build"
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Check build-logic
        run: ./gradlew check -p ./gradle/build-logic

      - name: Decrypt secrets
        run: ./release/decrypt-secrets.sh
        env:
          ENCRYPT_KEY: ${{ secrets.FILM_TIME_CI_ENCRYPT_KEY }}

      - name: Check code style with Spotless
        run: ./gradlew spotlessCheck --no-configuration-cache

      - name: Build with Gradle
        run: ./gradlew :tv:assembleGithubDebug

      - name: Clean secrets
        if: always()
        run: ./release/clean-secrets.sh
